version: 2
jobs:
  build1:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - save_cache:
          paths:
            - ~/code
          key: app-{{ .BuildNum }}

#      - run:
#          name: Run Findbugs
#          command: ./gradlew findbugs



  build2:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
        key: app-{{ .BuildNum }}
      - run:
          name: Run Checkstyle Tests
          command: ./gradlew checkstyle

  build3:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
        key: app-{{ .BuildNum }}
      - run:
          name: Run PMD Tests
          command: ./gradlew pmd

  build4:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
        key: app-{{ .BuildNum }}
      - run:
          name: Run Lint Tests
          command: ./gradlew lint test

  build5:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
        key: app-{{ .BuildNum }}
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results

  build6:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
        key: app-{{ .BuildNum }}
      - run:
          name: Build
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks
      - deploy:
          name: Deploy APK.
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              bash ./scripts/deploy-fabric.sh
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - build1
      - build2:
          requires:
            - build1
      - build3:
          requires:
            - build1
      - build4:
          requires:
            - build1
      - build5:
          requires:
            - build1
      - build6:
          requires:
            - build1
            - build2
            - build3
            - build4
            - build5